{% extends 'base.html.twig' %}

{% block title %}Movie-DB :: Tag-Management{% endblock %}

{% block body %}
    <h1>Tags</h1>
    <div class="row">
        <div class="col-sm-6">
            <p><a class="btn btn-primary" data-toggle="tooltip" title="Create a new tag entry" href="/newTag">New Tag</a></p>
        </div>
        <div class="col-sm-6">
            
            <select class="js-data-example-ajax">
              <option value="3620194" selected="selected">select2/select2</option>
            </select>
            
        </div>
    </div>
    <ul class="list-group">
        {% for tag in tags %}
            <li class="list-group-item">
                <div class="row">
                    <div class="col-sm-9">
                        <p><div class="btn btn-warning" style="border-color:#{{ tag.color }};background-color:#{{ tag.color }};">{{ tag.name }}</div></p>
                    </div>
                    <div class="col-sm-3 text-right">                        
                        <a class="btn btn-warning" data-toggle="tooltip" title="Modify this tag" href="/modifyTag/{{ tag.id }}">Modify</a>
                        <a class="btn btn-danger" data-toggle="tooltip" title="Delete this tag from the database" href="/deleteTag/{{ tag.id }}">Delete</a>
                    </div>
                </div>
            </li>
        {% endfor %}
    </ul>

<script type="text/javascript">
$(".js-data-example-ajax").select2({
  ajax: {
    url: "/getJsonSearchResultsForQuery",
    dataType: 'json',
    delay: 250,
    data: function (params) {
      return {
        query: params.term, // search term
      };
    },
    processResults: function (data, params) {
      // parse the results into the format expected by Select2
      // since we are using custom formatting functions we do not need to
      // alter the remote JSON data, except to indicate that infinite
      // scrolling can be used
      params.page = params.page || 1;
 
      return {
        results: data.items,
        pagination: {
          more: (params.page * 30) < data.total_count
        }
      };
    },
    cache: true
  },
  escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
  minimumInputLength: 1,
});
</script>

{% endblock %}